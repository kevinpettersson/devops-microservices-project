{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\devops-microservices-project\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { Box, Button, Heading, Input, VStack } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const handleRegister = async () => {\n    try {\n      const token = register(username, password1, password2);\n      localStorage.setItem(\"jwt\", token);\n      navigate(\"/login\");\n      console.log(\"register ok\");\n    } catch (e) {\n      throw new Error(\"Register account failed: \" + e.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 15,\n    maxW: \"md\",\n    mx: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: \"6\",\n      textAlign: \"center\",\n      color: \"green.500\",\n      children: \"Register account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: \"4\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        borderColor: \"green\",\n        placeholder: \"Enter username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        borderColor: \"green\",\n        placeholder: \"Enter password\",\n        onChange: e => setPassword2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        borderColor: \"green\",\n        placeholder: \"Confirm password\",\n        onChange: e => setPassword2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"green\",\n        onClick: () => handleRegister(),\n        children: \"Register account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"wYezApet/pO5xRbXcXyrTgDfohQ=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["Box","Button","Heading","Input","VStack","useState","useNavigate","jsxDEV","_jsxDEV","RegisterPage","_s","navigate","username","setUsername","password1","setPassword1","password2","setPassword2","handleRegister","token","register","localStorage","setItem","console","log","e","Error","message","p","maxW","mx","children","mb","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","spacing","type","borderColor","placeholder","onChange","target","value","colorScheme","onClick","_c","$RefreshReg$"],"sources":["C:/Repos/devops-microservices-project/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import {Box, Button, Heading, Input, VStack} from \"@chakra-ui/react\";\r\nimport {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nfunction RegisterPage() {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password1, setPassword1] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n\r\n    const handleRegister = async () => {\r\n        try {\r\n            const token = register(username, password1, password2);\r\n            localStorage.setItem(\"jwt\", token);\r\n            navigate(\"/login\");\r\n            console.log(\"register ok\");\r\n        }\r\n        catch (e){\r\n            throw new Error(\"Register account failed: \" + e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box p={15} maxW=\"md\" mx=\"auto\">\r\n            <Heading\r\n                mb={\"6\"}\r\n                textAlign={\"center\"}\r\n                color={\"green.500\"}\r\n            >\r\n                Register account\r\n            </Heading>\r\n            <VStack spacing={\"4\"}>\r\n                <Input\r\n                    type={\"text\"}\r\n                    borderColor={\"green\"}\r\n                    placeholder={\"Enter username\"}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <Input\r\n                    type={\"password\"}\r\n                    borderColor={\"green\"}\r\n                    placeholder={\"Enter password\"}\r\n                    onChange={(e) => setPassword2(e.target.value)}\r\n                />\r\n                <Input\r\n                    type={\"password\"}\r\n                    borderColor={\"green\"}\r\n                    placeholder={\"Confirm password\"}\r\n                    onChange={(e) => setPassword2(e.target.value)}\r\n                />\r\n\r\n                <Button colorScheme={\"green\"} onClick={() => handleRegister()}>\r\n                    Register account\r\n                </Button>\r\n            </VStack>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default RegisterPage"],"mappings":";;AAAA,SAAQA,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AACpE,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,KAAK,GAAGC,QAAQ,CAACR,QAAQ,EAAEE,SAAS,EAAEE,SAAS,CAAC;MACtDK,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,KAAK,CAAC;MAClCR,QAAQ,CAAC,QAAQ,CAAC;MAClBY,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC9B,CAAC,CACD,OAAOC,CAAC,EAAC;MACL,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGD,CAAC,CAACE,OAAO,CAAC;IAC5D;EACJ,CAAC;EAED,oBACInB,OAAA,CAACR,GAAG;IAAC4B,CAAC,EAAE,EAAG;IAACC,IAAI,EAAC,IAAI;IAACC,EAAE,EAAC,MAAM;IAAAC,QAAA,gBAC3BvB,OAAA,CAACN,OAAO;MACJ8B,EAAE,EAAE,GAAI;MACRC,SAAS,EAAE,QAAS;MACpBC,KAAK,EAAE,WAAY;MAAAH,QAAA,EACtB;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACV9B,OAAA,CAACJ,MAAM;MAACmC,OAAO,EAAE,GAAI;MAAAR,QAAA,gBACjBvB,OAAA,CAACL,KAAK;QACFqC,IAAI,EAAE,MAAO;QACbC,WAAW,EAAE,OAAQ;QACrBC,WAAW,EAAE,gBAAiB;QAC9BC,QAAQ,EAAGlB,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACmB,MAAM,CAACC,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF9B,OAAA,CAACL,KAAK;QACFqC,IAAI,EAAE,UAAW;QACjBC,WAAW,EAAE,OAAQ;QACrBC,WAAW,EAAE,gBAAiB;QAC9BC,QAAQ,EAAGlB,CAAC,IAAKR,YAAY,CAACQ,CAAC,CAACmB,MAAM,CAACC,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACF9B,OAAA,CAACL,KAAK;QACFqC,IAAI,EAAE,UAAW;QACjBC,WAAW,EAAE,OAAQ;QACrBC,WAAW,EAAE,kBAAmB;QAChCC,QAAQ,EAAGlB,CAAC,IAAKR,YAAY,CAACQ,CAAC,CAACmB,MAAM,CAACC,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAEF9B,OAAA,CAACP,MAAM;QAAC6C,WAAW,EAAE,OAAQ;QAACC,OAAO,EAAEA,CAAA,KAAM7B,cAAc,CAAC,CAAE;QAAAa,QAAA,EAAC;MAE/D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAC5B,EAAA,CArDQD,YAAY;EAAA,QACAH,WAAW;AAAA;AAAA0C,EAAA,GADvBvC,YAAY;AAuDrB,eAAeA,YAAY;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}