{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\devops-microservices-project\\\\frontend\\\\src\\\\pages\\\\TaskPage.js\",\n  _s = $RefreshSig$();\nimport { Box, Button, Heading, Input, Stack, Text } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:8082\";\nfunction TaskPage() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const token = localStorage.getItem(\"jwt\");\n        const response = await fetch(API_BASE + \"/tasks\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + token\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tasks\");\n        }\n        const data = await response.json();\n        setTasks(data);\n      } catch (e) {\n        alert(e);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 15,\n    maxW: \"md\",\n    mx: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: \"6\",\n      textAlign: \"center\",\n      color: \"green.500\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [tasks.length === 0 && /*#__PURE__*/_jsxDEV(Text, {\n        children: \"No tasks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 40\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Box, {\n        p: 3,\n        borderWidth: \"1px\",\n        borderRadius: \"md\",\n        bg: task.completed ? \"green.50\" : \"red.50\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"bold\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Status: \", task.completed ? \"Done\" : \"Pending\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      as: \"fieldset\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          as: \"legend\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Name\",\n          borderColor: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Description\",\n          borderColor: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          colorScheme: \"green\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskPage, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["Box","Button","Heading","Input","Stack","Text","useEffect","useState","jsxDEV","_jsxDEV","API_BASE","TaskPage","_s","tasks","setTasks","fetchTasks","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","e","alert","p","maxW","mx","children","mb","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","spacing","length","map","task","borderWidth","borderRadius","bg","completed","fontWeight","title","id","as","placeholder","borderColor","type","colorScheme","_c","$RefreshReg$"],"sources":["C:/Repos/devops-microservices-project/frontend/src/pages/TaskPage.js"],"sourcesContent":["import {Box, Button, Heading, Input, Stack, Text} from \"@chakra-ui/react\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst API_BASE = \"http://localhost:8082\";\r\n\r\nfunction TaskPage() {\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const token = localStorage.getItem(\"jwt\");\r\n                const response = await fetch(API_BASE + \"/tasks\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": \"Bearer \" + token,\r\n                    },\r\n                });\r\n\r\n                if(!response.ok){\r\n                    throw new Error(\"Failed to fetch tasks\")\r\n                }\r\n                const data = await response.json();\r\n                setTasks(data);\r\n            } catch (e){\r\n                alert(e)\r\n            }\r\n        };\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    return (\r\n        <Box p={15} maxW=\"md\" mx=\"auto\">\r\n            <Heading\r\n                mb={\"6\"}\r\n                textAlign={\"center\"}\r\n                color={\"green.500\"}\r\n            >\r\n                Tasks\r\n            </Heading>\r\n            <Stack spacing={2}>\r\n                {tasks.length === 0 && <Text>No tasks available</Text>}\r\n                {tasks.map(task => (\r\n                    <Box\r\n                        key={task.id}\r\n                        p={3}\r\n                        borderWidth=\"1px\"\r\n                        borderRadius=\"md\"\r\n                        bg={task.completed ? \"green.50\" : \"red.50\"}\r\n                    >\r\n                        <Text fontWeight=\"bold\">{task.title}</Text>\r\n                        <Text>Status: {task.completed ? \"Done\" : \"Pending\"}</Text>\r\n                    </Box>\r\n                ))}\r\n            </Stack>\r\n            <Box as={\"fieldset\"}>\r\n                <Stack spacing={2}>\r\n                    <Text as={\"legend\"}>Create Task</Text>\r\n                    <Input placeholder={\"Name\"} borderColor={\"green\"} />\r\n                    <Input placeholder={\"Description\"} borderColor={\"green\"} />\r\n                    <Button type={\"submit\"} colorScheme={\"green\"}>\r\n                        Submit\r\n                    </Button>\r\n                </Stack>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default TaskPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}